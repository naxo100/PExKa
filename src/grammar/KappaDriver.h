/*
 * KappaDriver.h
 *
 *  Created on: Jan 8, 2016
 *      Author: naxo
 */

#ifndef GRAMMAR_KAPPADRIVER_H_
#define GRAMMAR_KAPPADRIVER_H_


#include <string>
#include <list>
#include <vector>
#include <fstream>
#include "ast/KappaAst.h"
#include "location.hh"
#include "kappa3/Lexer.h"
#include "kappa3/Parser.hpp"
#include "kappa4/Lexer.h"
#include "kappa4/Parser.hpp"

using namespace std;

namespace grammar {

class KappaDriver {
	vector<string> files;
	string curr_file;
	kappa3::Lexer lexer3;
	kappa3::Parser parser3;
	kappa4::Lexer lexer4;
	kappa4::Parser parser4;
	yy::location loc;
	ast::KappaAst syntax_tree;

public:
	/** \brief Construct a KappaDriver object with a vector of file names.
	 *
	 * Construct a KappaDriver object with a vector of file names. parse()
	 * function will open and parse each file and save the kappa AST internally.
	 */
	KappaDriver(const vector<string> &files);

	/** \brief Construct an empty KappaDriver object.
	 *
	 * Construct an empty KappaDriver object that will read a kappa model from
	 * stdin and save the kappa AST internally.
	 */
	KappaDriver();

	/** \brief Destroy this object.
	 *
	 */
	virtual ~KappaDriver();

	/** \brief Parse a kappa model.
	 *
	 * Parse a kappa model from files or stdin. Generate a kappa AST internally.
	 */
	int parse();

	template <typename T>
	T getNextToken();

	const string* getCurrentFileName() const;

	yy::location* getLocation();

	/** \brief Return the kappa AST generated by parse().
	 *
	 */
	ast::KappaAst& getAst();
};

} /* namespace ast */

#endif /* GRAMMAR_KAPPADRIVER_H_ */
